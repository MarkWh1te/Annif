version: "3.6"

services:

  gunicorn_server:
    image: quay.io/natlibfi/annif
    command: ["gunicorn", "annif:create_app()", "--bind", "0.0.0.0:8000"]
    volumes:
      - data:/annif-projects
    depends_on:
      - data
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.environment == test
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 15s
      retries: 3
      start_period: 10s

  nginx:
    image: nginx
    volumes:
      - data:/annif-projects
    depends_on:
      - gunicorn_server
    command: ["nginx", "-c", "/annif-projects/nginx.conf", "-g", "daemon off;"]
    networks:
    - default
    - traefik-net
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.environment == test
      labels:
      - 'traefik.port=80'
      - 'traefik.docker.network=traefik-net'
      - 'traefik.frontend.rule=Host:annif.dev.finto.fi'

  data:
    image: quay.io/natlibfi/annif-data
    volumes:
      - data:/tmp
    command: >
      sh -c "echo Copying data from image to mounted volume... &&
        cp -r --verbose /annif-projects/. /tmp/ &&
        echo Copied!"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      placement:
        constraints:
        - node.labels.environment == test

volumes:
  data:

networks:
  traefik-net:
    external: true
